# 스프링 부트
  - 스프링의 서브 프로젝트라고도 함.
  - 스프링 MVC 로 진행하는 웹 애플리케이션용 프레임워크를 이용하다 보면
    필요한 라이브러리를 정확하게 설정하지 않으면 안 됨. 또한 기본적인 처리를
    구축하기 위해서는 MVC 의 각 코드를 작성해야 함.  
  - 기존의 스프링 개발 방식에서 불편했던 설정이나 버전 충돌 등의 불편했던
    점들을 없애는 대신에 빠르고 쉬운 서버 환경과 테스트 환경 등을 한 번에
    제공해서 훨씬 간편한 개발 환경을 만들어 줌.
    
# 스프링 부트의 장점
  1. 자동화된 라이브러리 관리.
     - 기존에도 Maven이나 Gradle을 이용해 라이브러리를 추가하는 작업 등을
       해 왔다면 스프링 부트에서는 이 작업을 더욱 간단히 처리할 수 있음.
  2. Spring Boot Auto Cofigure(자동 설정)
     - 스프링 부트에서 현재 프로젝트에 추가된 라이브러리를 이용해 자동으로 
       실행에 필요한 환경을 구성함. 예를 든다면 화면을 구성할 때 특정
       라이브러리를 사용하기로 결정을 했으면 이에 관련된 설정을 자동으로 
       구성해 주기 때문에 개발자는 별다른 설정이 없이도 개발할 수 있도록
       구성됨.
  3. 적당한 라이브러리 자동 설정과 XML이 없는 환경 구축
     - 현재 버전에 맞는 관련 라이브러리들을 자동으로 결정을 함. 이 기능 
       덕분에 라이브러리 버전이 높거나 낮아서 정상적으로 동작이 안 되는 
       상황을 겪을 필요가 없어짐. 이전처럼 XML을 아용해서 라이브러리를
       매번 설정하는 과정을 줄이고 개발자들이 순수한 개발에만 보다 집중할
       수 있는 환경을 제공함.
  4. 테스트 환경과 내장 Tomcat
     - 스프링 부트를 이용해서 생성하는 프로젝트는 기본적으로 Tomcat을
       내장하고 있음. 실행 역시 별도의 설정이 없이 main 메서드를 실행하는
       방식으로 서버를 구동하기 때문에 빠르게 결과를 볼 수 있는 환경을 제공함.
       
# 스프링 부트 구성 요소
  1. src/main/java 폴더
     - 자바 파일을 저장하는 공간임.
     * com.example.sample 하위 패키지
       ==> 스프링 부트의 컨트롤러, DTO, 서비스 등의 자바 파일이 이곳에 위치함.
  2. src/main/resources 폴더
     - 자바 파일을 제외한 HTML, CSS, 자바스트립트, 환경 파일 등을 저장하는 공간임.
     * 하위 디렉토리
       - template 디렉토리
         ==> 템플릿 파일을 저장함.
             템플릿 파일은 자바 코드를 삽입할 수 있는 HTML 형식의 파일로, 스프링 부트에서
             생성한 자바 객체를 HTML 형태로 출력할 수 있음.
             웹 페이지를 구성하는 HTML 파일을 저장함.
       - static 디렉토리
         ==> 스타일시트(css 파일), 자바스크립트(js 파일), 그리고 이미지 파일(jpg 파일,
             png 파일 등) 등을 저장함.
       - application.properties 파일
         ==> application.properties 파일은 프로젝트의 환경을 설정하는 파일임.
             환경 변수, 데이터베이스 등의 설정을 이 파일에 저장함.
  3. src/test/java 디렉토리
     - 프로젝트에서 작성한 파일을 테스트 하는 코드를 작성하는 공간
  4. build.gradle 파일
     - gradle이 사용하는 환경 파일임. 빌드 도구임.
     - maven과 같은 이전 세대의 단점을 보완하고 장점을 취합하여 만들었음.
     - 프로젝트에 필요한 플러그인과 라이브러리를 설치하기 위한 내용을 작성함.   
   
