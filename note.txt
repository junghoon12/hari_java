/*
			 * 동적 객체 생성 : newInstance()
			 * - Class 객체를 이용하면 new 연산자의 사용 없이
			 *   동적으로 객체 생성이 가능함.
			 * - 코드 작성 시에 클래스의 이름을 결정할 수 없고,
			 *   런타임(실행) 시에 클래스의 이름이 결정되는
			 *   경우에 유용하게 사용이 됨.
			 * 
			 * - newInstance() 메서드는 기본생성자를 호출해서
			 *   객체를 생성하기 때문에 반드시 클래스에 기본생성자가
			 *   존재해야 함.
			 *   예외가 발생할 수 있는데 해당 클래스가 추상클래스이거나
			 *   인터페이스일 경우 발생하고, 또 하나의 예외는 클래스의
			 *   생성자가 접근제한자로 인해 접근할 수 없는 경우에
			 *   발생을 함. 따라서 예외 처리를 해 주어야 함.
			 *   
			 * - 반환 타입은 Object 타입이므로 맞게 형변환을 해 주면
			 *   되지만, 클래스의 타입을 모르는 상태이므로 형변환을
			 *   해 줄 수가 없음. 이러한 문제를 해결하기 위해서
			 *   인터페이스를 사용하는 것임.
			 *   
			 * - Class.forName(class 이름)은 파라미터로 받은 class
			 *   이름에 해당하는 클래스를 로딩한 후에, 그 클래스에
			 *   해당하는 인스턴스를 리턴해 줌.
			 *   newInstance() 메서드는 로딩한 클래스의 객체를 
			 *   생성하는 메서드이고, 이렇게 생성된 객체를
			 *   동적 객체 생성이라고 함.
			 */
