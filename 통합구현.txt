평가단위 : 통합구현



1. 프로젝트에 사용할 라이브러리를 pom.xml을 이용하여 추가(mavenrepository 이용)
    
    <dependency>
      <groupId>com.oracle</groupId>
      <artifactId>ojdbc6</artifactId>
      <version>11.2.0.3</version>
    </dependency>
 
    <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.5.4</version>
    </dependency>
  
    <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
      <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>2.0.3</version>
    </dependency>
 
    <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
       <version>${org.springframework-version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp -->
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
    </dependency>

=============================================================

  2. MemberController 클래스 작성
  1) 로그인 요청 URL을 매핑하여 서비스 호출 및 뷰 연결처리를 하는 메소드
      public String memberLogin() 작성. (매개변수는 자유롭게 선언, 반환값은 return "redirect:/";)
     
      @RequestMapping("login")
      public String memberLogin(Member member, Model model, HttpServletRequest request) {
          Member loginMember = memberService.loginMember(member);
    
          if(loginMember == null) {
          model.addAttribute("msg", "로그인 실패");
      }else {
          model.addAttribute("loginMember", loginMember);
      }
          return "redirect:/";
     }

   2) 로그인 실패시 "로그인 실패" 메시지 출력

       if(loginMember != null) {
           HttpSession session = request.getSession();
           session.getAttribute("loginMember", loginMember);
       }else{
           model.addAttribute("msg", "로그인 실패");
           return "common/errorPage";
       }

=============================================================

3. MemberService 인터페이스, MemberServiceImpl 클래스 작성

    // MemberService 인터페이스
    package com.ncs.test.member.model.service;

    import com.ncs.test.member.model.vo.Member;

    public interface MemberService {
         public abstract Member loginMember(Member member);
    }

   // MemberServiceImpl 구현 클래스
   package com.ncs.test.member.model.service;

   import org.springframework.beans.factory.annotation.Autowired;
   import org.springframework.stereotype.Service;
   import com.ncs.test.member.model.dao.MemberDAO;
   import com.ncs.test.member.model.vo.Member;

   @Service
   public class MemberServiceImpl implements MemberService {
       
        @Autowired
        private MemberDAO memberDAO;

       @Override
        public Member loginMember(Member member) {
              return memberDAO.loginMember(member);
        }
    }

=================================================================

4. MemberDAO 클래스 작성

    package com.ncs.test.member.model.dao;

    import org.mybatis.spring.SqlSessionTemplate;
    import org.springframework.beans.factory.annotation.Autowired;
    import org.springframework.stereotype.Repository;
    import com.ncs.test.member.model.vo.Member;

    @Repository
    public class MemberDAO {
         @Autowired
          private SqlSessionTemplate sqlSession;

          public Member loginMember(Member member) {
               return sqlSession.selectOne("memberMapper.loginMember", member);
          }
    }

=================================================================

5. mybatis-config.xml 작성
   1) Member 클래스의 별칭을 Member로 지정

       <typeAliases>  <typeAlias type="com.ncs.test.member.model.vo.Member" alias="Member"/> </typeAliases>

   2) member-mapper.xml 파일을 mapper로 등록 

       <mappers>  <mapper resource="/mappers/member-mapper.xml"/>  </mappers>

=================================================================

6. member-mapper.xml 작성
    1) VO 클래스와 Member 테이블 조회 결과를 매핑할 resultMap 작성 (id="memberResultSet") 

        <resultMap type="Member" id="memberResultSet">
           <id property="memberId" column="MEMBER_ID"/>
           <result property="memberPwd" column="MEMBER_PWD"/>
           <result property="memberName" column="MEMBER_NM"/>
           <result property="memberEnrollDate" column="MEMBER_ENROLL_DT"/>
        </resultMap>

    2) 로그인 기능을 수행하기 위한 select 엘리먼트 작성 (id="loginMember)
        
        <select id="loginMember" parameterType="Member" resultMap="memberResultSet">
             SELECT * FROM MEMBER WHERE MEMBER_ID= #{memberId} AND MEMBER_PWD= #{memberPwd}
        </select> 